1.创建一个版本库
	$ mkdir learngit
	$ cd learngit
	$ git init
2.添加文件
	$ git add test.txt

3.提交到git
	$ git commit -m "wrote a readme file"  		-m "<>" 说明符


查看git更改内容
$ git status
git add <file>	或者 $ git commit -m "wrote a readme file" 更新提交
git checkout -- <file> 删除更改
git diff 查看更改内容
$ git log --pretty=oneline

git reset --hard commit_id。
git log可以查看提交历史
要重返未来，用git reflog查看命令历史

更改文件后先git add  <file> 添加到缓冲区
再用git commit -m '提交信息'

git rm <文件> 删掉，并且
git commit
git checkout -- test.txt 撤销删除


关联远程仓库
git remote add origin https://github.com/cd-xiaowei/origin.git

第一次推送master分支的内容
git push -u origin master

此后使用命令
git push origin master推送最新修改；

# 克隆一个本地长裤
$ git clone https://github.com/cd-xiaowei/gitskills


查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

分支合并图
git log --graph --pretty=oneline

--no-ff参数就可以用普通模式合并
fast forward合并就看不出来曾经做过合并。


当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再git stash pop，回到工作现场。
如果要丢弃一个没有被合并过的分支，可以通过git branch -D <name>强行删除。


$ git push origin master
如果要推送其他分支，比如dev，就改成：
$ git push origin dev



多人合作 
-----------------------------------------------------------------------
首先，可以试图用git push origin <branch-name>推送自己的修改；

如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；

如果合并有冲突，则解决冲突，并在本地提交；

没有冲突或者解决掉冲突后，再用git push origin <branch-name>推送就能成功！

如果git pull提示no tracking information，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream-to <branch-name> origin/<branch-name>

查看远程库信息，使用git remote -v；

本地新建的分支如果不推送到远程，对其他人就是不可见的；

从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；

在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；

建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；

从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。


标签的使用
-----------------------------------------------------------------------------------
命令git tag <tagname>用于新建一个标签，默认为HEAD，也可以指定一个commit id；

命令git tag -a <tagname> -m "blablabla..."可以指定标签信息；

命令git tag可以查看所有标签


推送和删除标签 
-----------------------------------------------------------------------------------
命令git push origin <tagname>可以推送一个本地标签；

命令git push origin --tags可以推送全部未推送过的本地标签；

命令git tag -d <tagname>可以删除一个本地标签；

命令git push origin :refs/tags/<tagname>可以删除一个远程标签。















